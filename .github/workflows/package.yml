# Based on: https://github.com/ebbflow-io/ebbflow/blob/master/.github/workflows/continuous-integration.yml

name: Package

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    name: 'Build ${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    outputs:
      app-version: ${{ steps.app-version.outputs.APP_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
      # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
      - name: Update rust
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Check app version
        run: echo "$(cargo pkgid | cut -d# -f2)"
      - name: Store app version
        id: app-version
        run: echo "APP_VERSION=$(cargo pkgid | cut -d# -f2)" >> $GITHUB_OUTPUT
      - name: Build
        run: cargo build --release
      - name: Test
        run: cargo test --release

  package-deb:
    name: Package Debian (.deb)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
      # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
      - name: Update rust
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-deb
        run: cargo install cargo-deb
      - name: Build package
        run: cargo deb
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-deb
          path: ./target/debian/*.deb

  update-release-draft:
    name: 'Update release'
    needs: [ build, package-deb ]
    permissions:
      contents: write # Write permission is required to create a GitHub release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract built packages
        uses: actions/download-artifact@v4
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            package-deb/*.deb
          draft: true
